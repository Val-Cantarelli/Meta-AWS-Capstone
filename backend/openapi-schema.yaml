openapi: 3.0.3
info:
  title: Little Lemon API
  version: 1.0.0
  description: Restaurant management system API
paths:
  /api/cart:
    get:
      operationId: api_cart_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
            application/yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
          description: ''
    post:
      operationId: api_cart_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cart'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cart'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
  /api/cart/{id}:
    patch:
      operationId: api_cart_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCart'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
            application/xml:
              schema:
                $ref: '#/components/schemas/Cart'
            text/csv:
              schema:
                $ref: '#/components/schemas/Cart'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_cart_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/categories:
    get:
      operationId: api_categories_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: api_categories_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/csv:
              schema:
                $ref: '#/components/schemas/Category'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/categories/{id}:
    get:
      operationId: api_categories_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/csv:
              schema:
                $ref: '#/components/schemas/Category'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_categories_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/csv:
              schema:
                $ref: '#/components/schemas/Category'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_categories_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
            application/xml:
              schema:
                $ref: '#/components/schemas/Category'
            text/csv:
              schema:
                $ref: '#/components/schemas/Category'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_categories_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/groups/{group_name}/users:
    get:
      operationId: api_groups_users_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: group_name
        schema:
          type: string
          pattern: ^manager|delivery-crew$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_groups_users_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: group_name
        schema:
          type: string
          pattern: ^manager|delivery-crew$
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '201':
          description: No response body
  /api/groups/{group_name}/users/{id}:
    delete:
      operationId: api_groups_users_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: group_name
        schema:
          type: string
          pattern: ^manager|delivery-crew$
        required: true
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/menu-items:
    get:
      operationId: api_menu_items_list
      parameters:
      - in: query
        name: category
        schema:
          type: string
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: price
        schema:
          type: number
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMenuItemList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedMenuItemList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedMenuItemList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PaginatedMenuItemList'
          description: ''
    post:
      operationId: api_menu_items_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
  /api/menu-items/{id}:
    get:
      operationId: api_menu_items_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    put:
      operationId: api_menu_items_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    patch:
      operationId: api_menu_items_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/xml:
              schema:
                $ref: '#/components/schemas/MenuItem'
            text/csv:
              schema:
                $ref: '#/components/schemas/MenuItem'
            application/yaml:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    delete:
      operationId: api_menu_items_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders:
    get:
      operationId: api_orders_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: api_orders_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}:
    get:
      operationId: api_orders_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_orders_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_orders_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
            text/csv:
              schema:
                $ref: '#/components/schemas/Order'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_orders_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
            application/xml:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
            text/csv:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
            application/yaml:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
            application/xml:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
            text/csv:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
            application/yaml:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
            application/xml:
              schema:
                $ref: '#/components/schemas/TokenVerify'
            text/csv:
              schema:
                $ref: '#/components/schemas/TokenVerify'
            application/yaml:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /auth/users/:
    get:
      operationId: auth_users_list
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
            application/xml:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
            text/csv:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: auth_users_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreatePasswordRetype'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
            text/csv:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
            application/yaml:
              schema:
                $ref: '#/components/schemas/UserCreatePasswordRetype'
          description: ''
  /auth/users/{username}/:
    get:
      operationId: auth_users_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            application/yaml:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            application/yaml:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            application/yaml:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/activation/:
    post:
      operationId: auth_users_activation_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Activation'
            text/csv:
              schema:
                $ref: '#/components/schemas/Activation'
            application/yaml:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
  /auth/users/me/:
    get:
      operationId: auth_users_me_retrieve
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            application/yaml:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: auth_users_me_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            application/yaml:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: auth_users_me_partial_update
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            text/csv:
              schema:
                $ref: '#/components/schemas/User'
            application/yaml:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: auth_users_me_destroy
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /auth/users/resend_activation/:
    post:
      operationId: auth_users_resend_activation_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password/:
    post:
      operationId: auth_users_reset_password_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_password_confirm/:
    post:
      operationId: auth_users_reset_password_confirm_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
            application/xml:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
            text/csv:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
            application/yaml:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /auth/users/reset_username/:
    post:
      operationId: auth_users_reset_username_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            application/xml:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            text/csv:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
  /auth/users/reset_username_confirm/:
    post:
      operationId: auth_users_reset_username_confirm_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
            application/xml:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
            text/csv:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
            application/yaml:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
  /auth/users/set_password/:
    post:
      operationId: auth_users_set_password_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
            application/xml:
              schema:
                $ref: '#/components/schemas/SetPassword'
            text/csv:
              schema:
                $ref: '#/components/schemas/SetPassword'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
  /auth/users/set_username/:
    post:
      operationId: auth_users_set_username_create
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - csv
          - json
          - xml
          - yaml
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
            application/xml:
              schema:
                $ref: '#/components/schemas/SetUsername'
            text/csv:
              schema:
                $ref: '#/components/schemas/SetUsername'
            application/yaml:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
components:
  schemas:
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - token
      - uid
    Cart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        menuitem_name:
          type: string
          readOnly: true
        menuitem:
          type: integer
        quantity:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
      required:
      - id
      - menuitem
      - menuitem_name
      - price
      - quantity
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        title:
          type: string
          maxLength: 255
      required:
      - id
      - slug
      - title
    MenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        featured:
          type: boolean
        category:
          type: integer
      required:
      - category
      - featured
      - id
      - price
      - title
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        delivery_crew:
          type: integer
          nullable: true
        status:
          type: boolean
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          readOnly: true
        date:
          type: string
          format: date
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required:
      - date
      - id
      - items
      - total
      - user
    OrderItem:
      type: object
      properties:
        menuitem:
          type: integer
        menuitem_title:
          type: string
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
      required:
      - menuitem
      - menuitem_title
      - price
      - quantity
      - unit_price
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedMenuItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
    PaginatedOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - token
      - uid
    PatchedCart:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        menuitem_name:
          type: string
          readOnly: true
        menuitem:
          type: integer
        quantity:
          type: integer
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        title:
          type: string
          maxLength: 255
    PatchedMenuItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        featured:
          type: boolean
        category:
          type: integer
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        delivery_crew:
          type: integer
          nullable: true
        status:
          type: boolean
        total:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          readOnly: true
        date:
          type: string
          format: date
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
    PatchedUser:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - current_password
      - new_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - current_password
      - new_username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          readOnly: true
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
      required:
      - username
    UserCreatePasswordRetype:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        re_password:
          type: string
      required:
      - password
      - re_password
      - username
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          title: Username
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
      - new_username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
